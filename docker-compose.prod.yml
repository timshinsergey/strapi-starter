version: '3'
services:
  strapi:
    container_name: strapi
    build:
      dockerfile: Dockerfile.prod
    image: '{{ env.IMAGE_URL }}'
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: '{{ env.DATABASE_CLIENT }}'
      DATABASE_HOST: strapiDB
      DATABASE_NAME: '{{ env.DATABASE_NAME }}'
      DATABASE_USERNAME: '{{ env.DATABASE_USERNAME }}'
      DATABASE_PORT: '{{ env.DATABASE_PORT }}'
      JWT_SECRET: '{{ env.JWT_SECRET }}'
      API_TOKEN_SALT: '{{ env.API_TOKEN_SALT }}'
      APP_KEYS: '{{ env.APP_KEYS }}'
      ADMIN_JWT_SECRET: '{{ env.ADMIN_JWT_SECRET }}'
      DATABASE_PASSWORD: '{{ env.DATABASE_PASSWORD }}'
      NODE_ENV: production
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    image: mysql:8
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_USER: '{{ env.DATABASE_USERNAME }}'
      MYSQL_ROOT_PASSWORD: '{{ env.DATABASE_PASSWORD }}'
      MYSQL_PASSWORD: '{{ env.DATABASE_PASSWORD }}'
      MYSQL_DATABASE: '{{ env.DATABASE_NAME }}'

    volumes:
      - strapi-data:/var/lib/mysql
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - '3306:3306'
    networks:
      - strapi

volumes:
  strapi-data:


networks:
  strapi:
    name: Strapi
    driver: bridge
